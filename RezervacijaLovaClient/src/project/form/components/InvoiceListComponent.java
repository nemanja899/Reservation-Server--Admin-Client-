/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.form.components;

import domain.Animal;
import domain.Invoice;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import project.form.components.decorator.IComponentFilter;

/**
 *
 * @author User
 */
public class InvoiceListComponent extends javax.swing.JPanel implements IComponentFilter<Invoice> {

    /**
     * Creates new form InvoiceList
     */
    private List<Invoice> invoices;

    public InvoiceListComponent() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listInvoice = new javax.swing.JList<>();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        listInvoice.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listInvoice);

        add(jScrollPane1);
    }// </editor-fold>//GEN-END:initComponents

    public void setInvoices(List<Invoice> invoices) {
        this.invoices = invoices;
    }

    @Override
    public List<Invoice> getItems() {
        return invoices;
    }

    @Override
    public String getDomainName() {
        return "Racun";
    }

    @Override
    public void clear() {
        ((DefaultListModel) listInvoice.getModel()).removeAllElements();
    }

    @Override
    public void addItem(Invoice item) {
        ((DefaultListModel) listInvoice.getModel()).addElement(item);
    }

    public static boolean Filter(Invoice item, String str) {
        if (item.getHunter().getFullName().toLowerCase().contains(str.toLowerCase())
                || item.getHunter().getpassportNo().toLowerCase().contains(str.toLowerCase())
                || item.getNumber().toLowerCase().contains(str.toLowerCase())
                || (str.toLowerCase().equals("obradjen") && item.isObradjen())
                || (str.toLowerCase().equals("neobradjen") && !item.isObradjen())) {
            return true;
        } else {
            return false;
        }
    }

    public JList getListInvoice() {
        return listInvoice;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listInvoice;
    // End of variables declaration//GEN-END:variables
}
